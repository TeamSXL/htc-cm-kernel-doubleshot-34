--- drivers/video/msm/mipi_dsi.c
+++ drivers/video/msm/mipi_dsi.c
@@ -29,15 +29,12 @@
 #include <mach/hardware.h>
 #include <mach/gpio.h>
 #include <mach/clk.h>
-#include <mach/debug_display.h>
 
 #include "msm_fb.h"
 #include "mipi_dsi.h"
 #include "mdp.h"
 #include "mdp4.h"
 
-#include <mach/panel_id.h>
-
 u32 dsi_irq;
 u32 esc_byte_ratio;
 
@@ -113,19 +124,25 @@
 				if (MDP_REV_303 != mdp_rev)
 					gpio_free(vsync_gpio);
 			}
-			if (!mfd->panel_info.lcdc.no_set_tear)
-				mipi_dsi_set_tear_off(mfd);
+			mipi_dsi_set_tear_off(mfd);
 		}
 	}
 
 	ret = panel_next_off(pdev);
 
-#ifdef CONFIG_MSM_BUS_SCALING
-	mdp_bus_scale_update_request(0);
-#endif
+	spin_lock_bh(&dsi_clk_lock);
+
+	mipi_dsi_clk_disable();
+
+	/* disbale dsi engine */
+	MIPI_OUTP(MIPI_DSI_BASE + 0x0000, 0);
 
-	mipi_dsi_clk_turn_off();
+	mipi_dsi_phy_ctrl(0);
 
+	mipi_dsi_ahb_ctrl(0);
+	spin_unlock_bh(&dsi_clk_lock);
+
+	mipi_dsi_unprepare_clocks();
 	if (mipi_dsi_pdata && mipi_dsi_pdata->dsi_power_save)
 		mipi_dsi_pdata->dsi_power_save(0);
 
@@ -139,37 +156,10 @@
 	return ret;
 }
 
-void mipi_exit_ulps(void)
-{
-	uint32 status;
-#if 0
-	status=MIPI_INP(MIPI_DSI_BASE + 0x00a4);
-	if ((status&0x1700)!=0) {
-	PR_DISP_DEBUG("%s: no need to exit ulps\n", __func__);
-	} else
-#endif
-	
-	{
-		status=MIPI_INP(MIPI_DSI_BASE + 0x00a8);
-		status&=0x10000000; 
-		status |= (BIT(8) | BIT(9) | BIT(10) | BIT(12));
-		MIPI_OUTP(MIPI_DSI_BASE + 0x00a8, status);
-		mb();
-		msleep(5);
-		status=MIPI_INP(MIPI_DSI_BASE + 0x00a4);
-		if ((status&0x1700)!=0) {
-			status=MIPI_INP(MIPI_DSI_BASE + 0x00a8);
-			status&=0x10000000; 
-			MIPI_OUTP(MIPI_DSI_BASE + 0x00a8, status);
-		} else {
-			PR_DISP_DEBUG("%s: cannot exit ulps\n", __func__);
-		}
-	}
-}
-
 static int mipi_dsi_on(struct platform_device *pdev)
 {
 	int ret = 0;
+	u32 clk_rate;
 	struct msm_fb_data_type *mfd;
 	struct fb_info *fbi;
 	struct fb_var_screeninfo *var;
@@ -179,29 +169,35 @@
 	u32 ystride, bpp, data;
 	u32 dummy_xres, dummy_yres;
 	int target_type = 0;
-	static bool bfirsttime = true;
 
-	PR_DISP_INFO("%s+:\n", __func__);
+	pr_debug("%s+:\n", __func__);
 
 	mfd = platform_get_drvdata(pdev);
 	fbi = mfd->fbi;
 	var = &fbi->var;
 	pinfo = &mfd->panel_info;
-
-#ifdef CONFIG_MSM_ALT_DSI_ESCAPE_CLOCK
 	esc_byte_ratio = pinfo->mipi.esc_byte_ratio;
-#else
-	esc_byte_ratio = 2;
-#endif
 
 	if (mipi_dsi_pdata && mipi_dsi_pdata->dsi_power_save)
 		mipi_dsi_pdata->dsi_power_save(1);
 
+	cont_splash_clk_ctrl(0);
+	mipi_dsi_prepare_clocks();
+
+	mipi_dsi_ahb_ctrl(1);
+
+	clk_rate = mfd->fbi->var.pixclock;
+	clk_rate = min(clk_rate, mfd->panel_info.clk_max);
+
+	mipi_dsi_phy_ctrl(1);
+
 	if (mdp_rev == MDP_REV_42 && mipi_dsi_pdata)
 		target_type = mipi_dsi_pdata->target_type;
 
-	cont_splash_clk_ctrl(0);
-	mipi_dsi_clk_turn_on(&(mfd->panel_info), target_type);
+	mipi_dsi_phy_init(0, &(mfd->panel_info), target_type);
+
+	mipi_dsi_clk_enable();
+
 	MIPI_OUTP(MIPI_DSI_BASE + 0x114, 1);
 	MIPI_OUTP(MIPI_DSI_BASE + 0x114, 0);
 
@@ -272,12 +268,6 @@
 
 	mipi_dsi_host_init(mipi);
 
-	if (mipi->force_leave_ulps && bfirsttime) {
-		MIPI_OUTP(MIPI_DSI_BASE + 0x00A8, MIPI_INP(MIPI_DSI_BASE + 0x00A8) | (1<<4)); 
-		wmb();
-		MIPI_OUTP(MIPI_DSI_BASE + 0x00A8, MIPI_INP(MIPI_DSI_BASE + 0x00A8) | (1<<12)); 
-	}
-
 	if (mipi->force_clk_lane_hs) {
 		u32 tmp;
 
@@ -294,11 +284,6 @@
 
 	ret = panel_next_on(pdev);
 
-	if (mipi->force_leave_ulps && bfirsttime) {
-		mipi_exit_ulps();
-		bfirsttime = false;
-	}
-
 	mipi_dsi_op_mode_config(mipi->mode);
 
 	if (mfd->panel_info.type == MIPI_CMD_PANEL) {
@@ -344,29 +329,28 @@
 					}
 				}
 			}
-			if (!mfd->panel_info.lcdc.no_set_tear)
-				mipi_dsi_set_tear_on(mfd);
+			mipi_dsi_set_tear_on(mfd);
 		}
-		mipi_dsi_clk_cfg(0);
+		mipi_dsi_clk_disable();
+		mipi_dsi_ahb_ctrl(0);
+		mipi_dsi_unprepare_clocks();
 	}
 
-
-#ifdef CONFIG_MSM_BUS_SCALING
-	mdp_bus_scale_update_request(2);
-#endif
-
-	mdp4_overlay_dsi_state_set(ST_DSI_RESUME);
-
 	if (mdp_rev >= MDP_REV_41)
 		mutex_unlock(&mfd->dma->ov_mutex);
 	else
 		up(&mfd->dma->mutex);
 
-	PR_DISP_INFO("%s-:\n", __func__);
+	pr_debug("%s-:\n", __func__);
 
 	return ret;
 }
 
+static int mipi_dsi_late_init(struct platform_device *pdev)
+{
+	return panel_next_late_init(pdev);
+}
+
 
 static int mipi_dsi_resource_initialized;
 
